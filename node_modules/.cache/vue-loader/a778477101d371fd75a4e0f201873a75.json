{"remainingRequest":"D:\\Code_Files\\WebStorm_Files\\ExperimentTeachingSystem\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Code_Files\\WebStorm_Files\\ExperimentTeachingSystem\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\Code_Files\\WebStorm_Files\\ExperimentTeachingSystem\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Code_Files\\WebStorm_Files\\ExperimentTeachingSystem\\src\\components\\teacherPages\\task\\ManageTask.vue?vue&type=template&id=4ee22612&scoped=true&","dependencies":[{"path":"D:\\Code_Files\\WebStorm_Files\\ExperimentTeachingSystem\\src\\components\\teacherPages\\task\\ManageTask.vue","mtime":1637738228797},{"path":"D:\\Code_Files\\WebStorm_Files\\ExperimentTeachingSystem\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636890494000},{"path":"D:\\Code_Files\\WebStorm_Files\\ExperimentTeachingSystem\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1636890500000},{"path":"D:\\Code_Files\\WebStorm_Files\\ExperimentTeachingSystem\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636890494000},{"path":"D:\\Code_Files\\WebStorm_Files\\ExperimentTeachingSystem\\node_modules\\vue-loader\\lib\\index.js","mtime":1636890500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}